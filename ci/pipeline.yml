resource_types:
- name: gcs-resource
  type: registry-image
  source:
    repository: tpi-docker-virtual.usw1.packages.broadcom.com/frodenas/gcs-resource
    tag: 'v0.6.0'
    username: ((jfrog-artifactory.jfrog-username))
    password: ((jfrog-artifactory.jfrog-password))
- name: bbl-state-resource
  type: docker-image
  source:
    repository: tpi-docker-virtual.usw1.packages.broadcom.com/cfinfrastructure/bbl-state-resource
    username: ((jfrog-artifactory.jfrog-username))
    password: ((jfrog-artifactory.jfrog-password))
- name: bosh-deployment
  type: docker-image
  source:
    repository: tpi-docker-virtual.usw1.packages.broadcom.com/cloudfoundry/bosh-deployment-resource
    username: ((jfrog-artifactory.jfrog-username))
    password: ((jfrog-artifactory.jfrog-password))
- name: pivnet
  type: registry-image
  source:
    repository: tpi-docker-virtual.usw1.packages.broadcom.com/pivotalcf/pivnet-resource
    tag: latest-final
    username: ((jfrog-artifactory.jfrog-username))
    password: ((jfrog-artifactory.jfrog-password))
- name: github-release
  type: registry-image
  source:
    repository: tpi-docker-virtual.usw1.packages.broadcom.com/concourse/github-release-resource
    username: ((jfrog-artifactory.jfrog-username))
    password: ((jfrog-artifactory.jfrog-password))
# - name: bosh-io-stemcell
#   type: docker-image
#   source:
#     repository: tpi-docker-virtual.usw1.packages.broadcom.com/concourse/bosh-io-stemcell-resource
#     username: ((jfrog-artifactory.jfrog-username))
#     password: ((jfrog-artifactory.jfrog-password))
- name: shepherd
  type: registry-image
  source:
    repository: us-west2-docker.pkg.dev/shepherd-268822/shepherd2/concourse-resource
    tag: v1

resources:
- name: aqueduct-courier-source-code
  type: git
  source:
    branch: main
    uri: git@github.gwd.broadcom.net:TNZ/tpi-aqueduct-courier
    private_key: ((github.courier-git-deploy-private-key))
- name: aqueduct-courier-production-linux-binary
  type: gcs-resource
  source:
    bucket: ((aqueduct-courier-repo.courier-production-builds-bucket))
    json_key: ((service-accounts/gcp.unified-service-account))
    versioned_file: telemetry-collector-linux-amd64
- name: bosh-cli-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-cli
    release: true
    access_token: ((github.pivotal-cf-access-token))
- name: smith-cli-github-release
  type: github-release
  source:
    owner: TNZ
    repository: smith
    access_token: ((github.broadcom-github-access-token))
    github_api_url: https://github.gwd.broadcom.net/api/v3
    github_uploads_url: https://github.gwd.broadcom.net/api/uploads
- name: om-cli-github-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: om
    access_token: ((github.pivotal-cf-access-token))
- name: bbl-cli-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-bootloader
    release: true
    access_token: ((github.pivotal-cf-access-token))
# - name: telemetry-receiver-app
#   type: cf
#   source:
#     api: ((service-accounts/pcf1-deploy.api-url))
#     username: ((service-accounts/pcf1-deploy.username))
#     password: ((service-accounts/pcf1-deploy.password))
#     organization: ((service-accounts/pcf1-deploy.org))
#     space: stage
- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent
- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bpm-release
- name: telemetry-release
  type: git
  source:
    branch: main
    uri: git@github.com:pivotal-cf/telemetry-release
    private_key: ((github.telemetry-release-git-deploy-private-key))
    ignore_paths:
    - ci
- name: ci
  type: git
  source:
    branch: main
    uri: git@github.com:pivotal-cf/telemetry-release
    private_key: ((github.telemetry-release-git-deploy-private-key))
    paths:
    - ci
    - src
- name: telemetry-receiver-source
  type: git
  source:
    branch: main
    uri: git@github.com:pivotal-cf/telemetry-release
    paths:
    - src/acceptance_tests/telemetry_receiver
    - ci/tasks/run-telemetry-receiver-tests.*
    - src/fluentd
    private_key: ((github.telemetry-release-git-deploy-private-key))
- name: version
  type: semver
  source:
    driver: git
    uri: git@github.com:pivotal-cf/telemetry-release
    branch: main
    file: ci/VERSION
    private_key: ((github.telemetry-release-git-deploy-private-key))
# - name: testbed-lease
#   type: shepherd
#   source:
#     url: https://v2.shepherd.run
#     service-account-key: ((shepherd/tpi-telemetry.secret))
#     lease:
#       namespace: "tpi-telemetry"
#       pool:
#         namespace: official
#         name: tas-6_0
#     compatibility-mode: environments-app

- name: ruby-release
  type: git
  source:
    branch: main
    uri: git@github.com:cloudfoundry/bosh-package-ruby-release.git
    private_key: ((github.telemetry-release-git-deploy-private-key))
- name: every-24h
  type: time
  icon: clock-outline
  source:
    interval: 24h

jobs:
- name: update-ruby
  plan:
    - in_parallel:
      - get: telemetry-release
      - get: ruby-release
        trigger: true
      - get: ci
      - get: bosh-cli-github-release
        params:
          globs:
          - bosh-cli-*-linux-amd64
      - get: bbl-cli-github-release
        params:
          globs:
          - bbl-*_linux_amd64
    - task: bump-ruby-package
      file: ci/ci/tasks/bump-ruby-package.yml
      params:
        GCS_SERVICE_ACCOUNT_KEY: ((service-accounts/gcp.unified-service-account))
        GITHUB_NAME: ((telemetry-release-repo.github-name))
        GITHUB_EMAIL: ((telemetry-release-repo.github-email))
    - put: telemetry-release
      params:
        repository: telemetry-release
        rebase: true

- name: update-telemetry-collector
  plan:
    - in_parallel:
      - get: telemetry-release
      - get: ci
      - get: aqueduct-courier-source-code
      - get: aqueduct-courier-production-linux-binary
      - get: bosh-cli-github-release
        params:
          globs:
          - bosh-cli-*-linux-amd64
      - get: bbl-cli-github-release
        params:
          globs:
          - bbl-*_linux_amd64
    - task: update-release-package
      input_mapping:
        binary: aqueduct-courier-production-linux-binary
      file: ci/ci/tasks/update-release-package.yml
      params:
        GCS_SERVICE_ACCOUNT_KEY: ((service-accounts/gcp.unified-service-account))
        GITHUB_NAME: ((telemetry-release-repo.github-name))
        GITHUB_EMAIL: ((telemetry-release-repo.github-email))
    - put: telemetry-release
      params:
        repository: telemetry-release
        rebase: true

# - name: deploy-telemetry-receiver-app
#   serial_groups: [telemetry-receiver, telemetry-receiver-audit]
#   plan:
#   - in_parallel:
#     - get: telemetry-release
#       resource: telemetry-receiver-source
#       trigger: true
#     - get: ci
#   - task: test-telemetry-receiver
#     file: ci/ci/tasks/run-telemetry-receiver-tests.yml
#   - put: telemetry-receiver-app
#     params:
#       manifest: telemetry-release/src/acceptance_tests/telemetry_receiver/manifest.yml
#       environment_variables:
#         VALID_API_KEYS: ((telemetry-release-repo.acceptance-loader-api-keys))
#         MESSAGE_LIMIT: "50"

- name: run-centralizer-unit-tests
  serial_groups: [version]
  plan:
    - get: telemetry-receiver-source
      trigger: true
    - get: version
      params: {pre: build}
    - get: ci
    - task: run-centralizer-unit-tests
      file: ci/ci/tasks/run-centralizer-unit-tests.yml
    - put: version
      params: {file: version/version}

# - name: deploy-telemetry-acceptance
#   serial_groups: [acceptance]
#   plan:
#   - in_parallel:
#     - get: stemcell
#     - get: bpm-release
#     - get: version
#       passed: [run-centralizer-unit-tests]
#     - get: bosh-cli-github-release
#       params:
#         globs:
#         - bosh-cli-*-linux-amd64
#     - get: telemetry-release
#     - get: ci
#     - get: smith
#       resource: smith-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: om
#       resource: om-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: bbl-cli-github-release
#       params:
#         globs:
#         - bbl-*_linux_amd64
#   - task: create-release
#     file: ci/ci/tasks/create-release.yml
#   - put: testbed-lease
#     params:
#       action: create
#       duration: 6h
#       resource: testbed-lease
#     timeout: 6h
#   - task: telemetry-centralizer-acceptance-deployment
#     file: ci/ci/tasks/deploy-telemetry.yml
#     params:
#       CENTRALIZER_DEPLOYMENT_NAME: ((telemetry-release-repo.centralizer-acceptance-deployment-name))
#       AGENT_DEPLOYMENT_NAME: ((telemetry-release-repo.agent-acceptance-deployment-name))
#       AUDIT_MODE: false
#       LOADER_API_KEY: ((telemetry-release-repo.acceptance-loader-api-key))
#       LOADER_ENDPOINT: ((telemetry-release-repo.acceptance-loader-url))
#       ENV_TYPE: development
#       IAAS_TYPE: ((toolsmiths/acceptance-jammy.iaas_type))
#       FOUNDATION_ID: ((toolsmiths/acceptance-jammy.p-bosh-id-guid))
#       FOUNDATION_NICKNAME: release-acceptance
#       FLUSH_INTERVAL: 10
#       COLLECTOR_CRON_SCHEDULE: "* * * * *"
#       OPSMANAGER_HOSTNAME: ((toolsmiths/acceptance-jammy.ops-manager-hostname))
#       OPSMANAGER_CLIENT_NAME: ((toolsmiths/acceptance-jammy.opsman-client-id))
#       OPSMANAGER_CLIENT_SECRET: ((toolsmiths/acceptance-jammy.opsman-uaa-client-secret))
#       OPSMANAGER_INSECURE_SKIP_TLS_VERIFY: true
#       CF_API_URL: ((toolsmiths/acceptance-jammy.cf-api-url))
#       USAGE_SERVICE_URL: ((toolsmiths/acceptance-jammy.usage-service-url))
#       USAGE_SERVICE_CLIENT_ID: ((toolsmiths/acceptance-jammy.usage-service-client-id))
#       USAGE_SERVICE_CLIENT_SECRET: ((toolsmiths/acceptance-jammy.telemetry-usage-service-password))
#       USAGE_SERVICE_INSECURE_SKIP_TLS_VERIFY: true
#       SHEPHERD_SECRET: ((shepherd/tpi-telemetry.secret))
#       DATA_COLLECTION_MULTI_SELECT_OPTIONS: '["ceip_data"]'
#       OPERATIONAL_DATA_ONLY: false

# - name: deploy-telemetry-acceptance-audit
#   serial_groups: [acceptance-audit]
#   plan:
#   - in_parallel:
#     - get: stemcell
#     - get: bpm-release
#     - get: version
#       passed: [run-centralizer-unit-tests]
#     - get: bosh-cli-github-release
#       params:
#         globs:
#         - bosh-cli-*-linux-amd64
#     - get: telemetry-release
#     - get: ci
#     - get: smith
#       resource: smith-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: om
#       resource: om-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: bbl-cli-github-release
#       params:
#         globs:
#         - bbl-*_linux_amd64
#   - task: create-release
#     file: ci/ci/tasks/create-release.yml
#   - put: testbed-lease
#     params:
#       action: create
#       duration: 6h
#       resource: testbed-lease
#     timeout: 6h
#   - task: telemetry-centralizer-acceptance-deployment
#     file: ci/ci/tasks/deploy-telemetry.yml
#     params:
#       CENTRALIZER_DEPLOYMENT_NAME: telemetry-centralizer-acceptance-audit
#       AGENT_DEPLOYMENT_NAME: telemetry-agent-acceptance-audit
#       AUDIT_MODE: true
#       LOADER_API_KEY: ((telemetry-release-repo.acceptance-loader-api-key-audit))
#       LOADER_ENDPOINT: ((telemetry-release-repo.acceptance-loader-url))
#       ENV_TYPE: development
#       IAAS_TYPE: ((toolsmiths/acceptance-jammy.iaas_type))
#       FOUNDATION_ID: ((toolsmiths/acceptance-jammy.p-bosh-id-guid))
#       FOUNDATION_NICKNAME: release-acceptance
#       FLUSH_INTERVAL: 10
#       COLLECTOR_CRON_SCHEDULE: "* * * * *"
#       OPSMANAGER_HOSTNAME: ((toolsmiths/acceptance-jammy.ops-manager-hostname))
#       OPSMANAGER_CLIENT_NAME: ((toolsmiths/acceptance-jammy.opsman-client-id))
#       OPSMANAGER_CLIENT_SECRET: ((toolsmiths/acceptance-jammy.opsman-uaa-client-secret))
#       OPSMANAGER_INSECURE_SKIP_TLS_VERIFY: true
#       CF_API_URL: ((toolsmiths/acceptance-jammy.cf-api-url))
#       USAGE_SERVICE_URL: ((toolsmiths/acceptance-jammy.usage-service-url))
#       USAGE_SERVICE_CLIENT_ID: ((toolsmiths/acceptance-jammy.usage-service-client-id))
#       USAGE_SERVICE_CLIENT_SECRET: ((toolsmiths/acceptance-jammy.telemetry-usage-service-password))
#       USAGE_SERVICE_INSECURE_SKIP_TLS_VERIFY: true
#       SHEPHERD_SECRET: ((shepherd/tpi-telemetry.secret))
#       DATA_COLLECTION_MULTI_SELECT_OPTIONS: '["ceip_data"]'
#       OPERATIONAL_DATA_ONLY: false

# - name: test-acceptance-audit
#   serial_groups: [telemetry-receiver-audit, acceptance-audit]
#   plan:
#   - in_parallel:
#     - get: telemetry-release
#       passed: [deploy-telemetry-acceptance-audit]
#       trigger: true
#     - get: ci
#     - get: version
#       passed: [deploy-telemetry-acceptance-audit]
#     - get: bosh-cli-github-release
#       params:
#         globs:
#         - bosh-cli-*-linux-amd64
#     - get: smith
#       resource: smith-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: om
#       resource: om-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: bbl-cli-github-release
#       params:
#         globs:
#         - bbl-*_linux_amd64
#     - get: testbed-lease
#       passed: [deploy-telemetry-acceptance-audit]
#   - task: test-acceptance-sends-to-centralizer
#     attempts: 2
#     file: ci/ci/tasks/test-acceptance-sends-to-centralizer.yml
#     params:
#       LOADER_URL: ((telemetry-release-repo.acceptance-loader-url))
#       LOADER_API_KEY: ((telemetry-release-repo.acceptance-loader-api-key-audit))
#       CENTRALIZER_BOSH_DEPLOYMENT: telemetry-centralizer-acceptance-audit
#       AGENT_BOSH_DEPLOYMENT: telemetry-agent-acceptance-audit
#       AGENT_BOSH_INSTANCE: telemetry-agent
#       EXPECTED_ENV_TYPE: development
#       EXPECTED_FOUNDATION_NICKNAME: release-acceptance
#       EXPECTED_IAAS_TYPE: ((toolsmiths/acceptance-jammy.iaas_type))
#       EXPECTED_FOUNDATION_ID: ((toolsmiths/acceptance-jammy.p-bosh-id-guid))
#       AUDIT_MODE: true
#       SHEPHERD_SECRET: ((shepherd/tpi-telemetry.secret))
#   on_success:
#     put: testbed-lease
#     params:
#       action: release
#       resource: testbed-lease

# - name: test-acceptance-sends-to-centralizer
#   serial_groups: [telemetry-receiver, acceptance]
#   plan:
#   - in_parallel:
#     - get: telemetry-release
#       passed: [deploy-telemetry-acceptance]
#       trigger: true
#     - get: ci
#     - get: version
#       passed: [deploy-telemetry-acceptance]
#     - get: bosh-cli-github-release
#       params:
#         globs:
#         - bosh-cli-*-linux-amd64
#     - get: smith
#       resource: smith-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: om
#       resource: om-cli-github-release
#       params:
#         globs: ["*linux*"]
#     - get: bbl-cli-github-release
#       params:
#         globs:
#         - bbl-*_linux_amd64
#     - get: testbed-lease
#       passed: [deploy-telemetry-acceptance]
#   - task: test-acceptance-sends-to-centralizer
#     file: ci/ci/tasks/test-acceptance-sends-to-centralizer.yml
#     params:
#       LOADER_URL: ((telemetry-release-repo.acceptance-loader-url))
#       LOADER_API_KEY: ((telemetry-release-repo.acceptance-loader-api-key))
#       CENTRALIZER_BOSH_DEPLOYMENT: ((telemetry-release-repo.centralizer-acceptance-deployment-name))
#       AGENT_BOSH_DEPLOYMENT: ((telemetry-release-repo.agent-acceptance-deployment-name))
#       AGENT_BOSH_INSTANCE: telemetry-agent
#       EXPECTED_ENV_TYPE: development
#       EXPECTED_FOUNDATION_NICKNAME: release-acceptance
#       EXPECTED_IAAS_TYPE: ((toolsmiths/acceptance-jammy.iaas_type))
#       EXPECTED_FOUNDATION_ID: ((toolsmiths/acceptance-jammy.p-bosh-id-guid))
#       SHEPHERD_SECRET: ((shepherd/tpi-telemetry.secret))
#   on_success:
#     put: testbed-lease
#     params:
#       action: release
#       resource: testbed-lease

- name: deploy-telemetry-staging
  plan:
  - in_parallel:
    - get: stemcell
    - get: bpm-release
    - get: version
    - get: bosh-cli-github-release
      params:
        globs:
        - bosh-cli-*-linux-amd64
    - get: telemetry-release
    - get: ci
    - get: smith
      resource: smith-cli-github-release
      params:
        globs: ["*linux*"]
    - get: om
      resource: om-cli-github-release
      params:
        globs: ["*linux*"]
    - get: bbl-cli-github-release
      params:
        globs:
        - bbl-*_linux_amd64
  - task: create-release
    file: ci/ci/tasks/create-release.yml
  - task: deploy-telemetry
    file: ci/ci/tasks/deploy-telemetry.yml
    params:
      CENTRALIZER_DEPLOYMENT_NAME: telemetry-centralizer-staging
      AGENT_DEPLOYMENT_NAME: telemetry-agent-staging
      AUDIT_MODE: false
      LOADER_API_KEY: ((telemetry-release-repo.staging-loader-api-key))
      LOADER_ENDPOINT: ((telemetry-release-repo.staging-loader-endpoint))
      ENV_TYPE: development
      IAAS_TYPE: google
      FOUNDATION_ID: ((toolsmiths/staging-jammy.p-bosh-id-guid))
      FOUNDATION_NICKNAME: release-staging
      FLUSH_INTERVAL: 10
      COLLECTOR_CRON_SCHEDULE: "0 0 * * *"
      OPSMANAGER_HOSTNAME: ((toolsmiths/acceptance-jammy.ops-manager-hostname))
      OPSMANAGER_CLIENT_NAME: ((toolsmiths/acceptance-jammy.opsman-client-id))
      OPSMANAGER_CLIENT_SECRET: ((toolsmiths/acceptance-jammy.opsman-uaa-client-secret))
      OPSMANAGER_INSECURE_SKIP_TLS_VERIFY: true
      CF_API_URL: ((toolsmiths/acceptance-jammy.cf-api-url))
      USAGE_SERVICE_URL: ((toolsmiths/acceptance-jammy.usage-service-url))
      USAGE_SERVICE_CLIENT_ID: ((toolsmiths/acceptance-jammy.usage-service-client-id))
      USAGE_SERVICE_CLIENT_SECRET: ((toolsmiths/acceptance-jammy.telemetry-usage-service-password))
      USAGE_SERVICE_INSECURE_SKIP_TLS_VERIFY: true
      SHEPHERD_SECRET: ((shepherd/tpi-telemetry.secret))
      TOOLSMITHS_ENV_LOCKFILE: ((toolsmiths/staging-jammy-lockfile))
      DATA_COLLECTION_MULTI_SELECT_OPTIONS: '["ceip_data"]'
      OPERATIONAL_DATA_ONLY: false

- name: finalize-release
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: version
      params: {bump: final}
      passed: [deploy-telemetry-staging]
    - get: bosh-cli-github-release
      params:
        globs:
        - bosh-cli-*-linux-amd64
    - get: telemetry-release
      passed: [deploy-telemetry-staging]
    - get: ci
    - get: bbl-cli-github-release
      params:
        globs:
        - bbl-*_linux_amd64
  - task: create-final-release
    file: ci/ci/tasks/create-final-release.yml
    params:
      GCS_SERVICE_ACCOUNT_KEY: ((service-accounts/gcp.unified-service-account))
      GITHUB_NAME: ((telemetry-release-repo.github-name))
      GITHUB_EMAIL: ((telemetry-release-repo.github-email))
  - put: telemetry-release
    params:
      repository: telemetry-release
      rebase: true
      tag: version/version

- name: auto-patch
  serial_groups: [version]
  plan:
  - get: version
    passed: [finalize-release]
    params: {bump: patch, pre: build}
    trigger: true
  - put: version
    params: {file: version/version}

- name: major
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: build}
  - put: version
    params: {file: version/version}

- name: minor
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: build}
  - put: version
    params: {file: version/version}

- name: patch
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: patch, pre: build}
  - put: version
    params: {file: version/version}
- name: scan-for-cves
  plan:
    - get: telemetry-release
      trigger: true
    - get: ci
    - get: every-24h
      trigger: true
    - task: run-scan
      file: ci/ci/tasks/scan-repo.yml
