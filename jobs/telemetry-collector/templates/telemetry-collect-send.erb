#!/usr/bin/env bash

set -eu

rm -f /var/vcap/data/telemetry-collector/*.tar
chown -R vcap:vcap /var/vcap/jobs/telemetry-collector/config/
COLLECTOR_BIN=/var/vcap/packages/telemetry-collector/telemetry-collector-linux

# Update value usage function
create_or_update_options() {
    local file_path=$1

    local multi_select_key="data-collection-multi-select-options:"
    local target_key="operational-data-only:"

    local operational_data_multiselect='["operational_data"]'
    local ceip_data_multiselect='["ceip_data"]'

    local strings_to_remove=(
      "cf-api-url"
      "usage-service-url"
      "usage-service-client-id"
      "usage-service-client-secret"
      "usage-service-insecure-skip-tls-verify"
      "usage-service-timeout"
    )

    if ! grep -q "$multi_select_key" "$file_path"; then
        # Exits without making any changes
        return
    fi

    local multiselect_value=$(grep "$multi_select_key" "$file_path" | awk '{$1=""; print $0}' | tr -d ' ')

    if [ "$multiselect_value" == "$ceip_data_multiselect" ]; then
        for string in "${strings_to_remove[@]}"; do
            sed -i.bak "/$string/d" "$file_path"
        done
    fi

    if ! grep -q "$target_key" "$file_path"; then
        if [ "$multiselect_value" == "$operational_data_multiselect" ]; then
          echo "${target_key} true" >> "$file_path"
        else
          echo "${target_key} false" >> "$file_path"
        fi
    else
        if [ "$multiselect_value" == "$operational_data_multiselect" ]; then
            sed -i.bak "/$target_key/{s/false/true/;}" "$file_path"
        else
            sed -i.bak "/$target_key/{s/true/false/;}" "$file_path"
        fi
    fi

    local strings_exist=0
    for string in "${strings_to_remove[@]}"; do
        if grep -q "$string" "$file_path"; then
            strings_exist=1
            break
        fi
    done

    if [ "$strings_exist" -eq 0 ] && [ "$multiselect_value" != "$ceip_data_multiselect" ]; then
        if ! grep -q "core-consumption:" "$file_path"; then
            echo "core-consumption: true" >> "$file_path"
        else
            sed -i.bak "/core-consumption:/{s/false/true/;}" "$file_path"
        fi
    fi
}

# Paths (absolute!)
pre_start_config="/var/vcap/jobs/telemetry-collector/config/pre-start-collect.yml"
config="/var/vcap/jobs/telemetry-collector/config/collect.yml"

# Check and update pre-start-collect.yml
create_or_update_options "$pre_start_config"

# Check and update collect.yml
create_or_update_options "$config"

$COLLECTOR_BIN collect --config "$1"

TAR_FILE=$(find /var/vcap/data/telemetry-collector -name "*.tar")

export no_proxy=<%= p("telemetry.proxy_settings.no_proxy") %>
export http_proxy=<%= p("telemetry.proxy_settings.http_proxy") %>
export https_proxy=<%= p("telemetry.proxy_settings.https_proxy") %>

audit_mode=<%= p("audit_mode") %>
if [ "${audit_mode}" != "true" ]; then
  $COLLECTOR_BIN send --path $TAR_FILE --api-key <%= p('telemetry.api_key') %> <% if_p("telemetry.endpoint_override") do |endpoint_override| %> --override-telemetry-endpoint <%= endpoint_override %> <% end %>
fi
